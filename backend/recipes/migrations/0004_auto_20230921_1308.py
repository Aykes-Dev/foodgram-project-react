# Generated by Django 3.2 on 2023-09-21 10:08

from django.db import migrations, models
import django.db.models.deletion
import recipes.validators


class Migration(migrations.Migration):

    dependencies = [
        ('recipes', '0003_auto_20230921_1231'),
    ]

    operations = [
        migrations.CreateModel(
            name='Compound',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveSmallIntegerField(verbose_name='Мера')),
                ('ingredients', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='сompound', to='recipes.ingredient', verbose_name='Продукты')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='сompound', to='recipes.recipe', verbose_name='Рецепт')),
            ],
            options={
                'verbose_name': 'Мера продуктов',
                'verbose_name_plural': 'Мера продуктов',
                'ordering': ('recipe',),
                'default_related_name': 'сompound',
            },
        ),
        migrations.AlterField(
            model_name='tag',
            name='color',
            field=models.CharField(default='#FF0000', max_length=7, unique=True, validators=[recipes.validators.validate_color], verbose_name='Цвет'),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(max_length=256, unique=True, verbose_name='Адрес электронной почты'),
        ),
        migrations.DeleteModel(
            name='CountIngredient',
        ),
        migrations.AlterField(
            model_name='recipe',
            name='ingredients',
            field=models.ManyToManyField(related_name='recipes', through='recipes.Compound', to='recipes.Ingredient', verbose_name='Продукты'),
        ),
        migrations.AddConstraint(
            model_name='compound',
            constraint=models.UniqueConstraint(fields=('recipe', 'ingredients'), name='unique count ingredient'),
        ),
    ]
